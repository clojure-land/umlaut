<document> ::= statement*

(* general language features*)
spacer ::= ignore+
ignored ::= ignore*
ignore ::= unicode-BOM | white-space | new-line | comment
unicode-BOM ::= "\uFEFF"
white-space ::= #"[\x{9}\x{20}]"
block-start ::= <ignored> <"{">
block-end ::= <ignored> <"}">
group-start ::= <ignored> <"("> <ignored>
group-end ::= <ignored> <")"> <ignored>
new-line ::= #"\n"
comment-char ::= "//"
comment ::= comment-char value <new-line>
<identifier> ::= #"[_A-Za-z][_0-9A-Za-z]*"
<value> ::= #"[\d\t\w <\(\[\{\\\^\-:,;'\"%$#@&#=\$!\|\]\}\)\?\*\+\.>]+"

(* high-level section *)
<statement> ::= <ignored> | type* | enum* | interface* | diagram*

(* annotations *)
<annotation-space> ::= identifier <"/"> identifier
annotation ::= <"@"> annotation-space <spacer> identifier <spacer> value <spacer>

(* class statement *)
type ::= annotation* <"type"> <spacer> identifier parent-set? attribute-block
<attribute-block> ::= <block-start> (attribute|method)+ <block-end>
attribute ::= <ignored> identifier <ignored> <":"> <ignored> kind required? <",">?
method ::= <ignored> identifier <ignored> <group-start> attribute+ <group-end> <ignored> <":"> <ignored> return-kind
arity-value ::= #"[0-9]+" | "n"
<arity> ::= <"["> arity-value (<".."> arity-value) <"]">
required ::= <"!">
return-kind ::= identifier arity? required?
kind ::= identifier arity?
<parent-set> ::= <ignored> <":"> <ignored> parent*
parent ::= <ignored> identifier

(* interface statement *)
interface ::= <"interface"> <spacer> identifier attribute-block

(* enum statement *)
enum ::= <"enum"> <spacer> identifier enum-block
<enum-block> ::= <block-start> enum-entry+ <block-end>
<enum-entry> ::= <ignored> identifier

(* diagram statement *)
diagram ::= <"diagram"> <spacer> identifier diagram-block
<diagram-block> ::= <block-start> diagram-group+ <block-end>
diagram-group ::= <group-start> diagram-entry+ <group-end>"!"?
<diagram-entry> ::= <ignored> identifier